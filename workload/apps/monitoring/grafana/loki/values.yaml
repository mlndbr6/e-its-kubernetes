loki:  
  deploymentMode: SingleBinary
  singleBinary:
    tolerations:
      - key: "monitoring"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
    replicas: 1
    persistence:
      # -- Enable volume claims in pod spec
      enabled: true

      size: 10Gi
      storageClass: standard

  resultsCache:
    enabled: true
    allocatedMemory: 384

  chunksCache:
    enabled: true
    allocatedMemory: 384


  loki:
    memcached:
      enabled: true
      persistence:
        enabled: true
        size: 10Gi
        storageClass: standard

    # Configures the readiness probe for all of the Loki pods
    readinessProbe:
      httpGet:
        path: /ready
        port: http-metrics
      initialDelaySeconds: 30
      timeoutSeconds: 1
    podSecurityContext:
      fsGroup: 10001
      runAsGroup: 10001
      runAsNonRoot: true
      runAsUser: 10001
    # -- The SecurityContext for Loki containers
    containerSecurityContext:
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      allowPrivilegeEscalation: false
    # -- Should enableServiceLinks be enabled. Default to enable
    enableServiceLinks: true
    configStorageType: ConfigMap
    configObjectName: '{{ include "loki.name" . }}'
    generatedConfigObjectName: '{{ include "loki.name" . }}'
    config: |
      {{- if .Values.enterprise.enabled}}
      {{- tpl .Values.enterprise.config . }}
      {{- else }}
      auth_enabled: {{ .Values.loki.auth_enabled }}
      {{- end }}

      {{- with .Values.loki.server }}
      server:
        {{- toYaml . | nindent 2}}
      {{- end}}

      pattern_ingester:
        enabled: {{ .Values.loki.pattern_ingester.enabled }}

      memberlist:
      {{- if .Values.loki.memberlistConfig }}
        {{- toYaml .Values.loki.memberlistConfig | nindent 2 }}
      {{- else }}
      {{- if .Values.loki.extraMemberlistConfig}}
      {{- toYaml .Values.loki.extraMemberlistConfig | nindent 2}}
      {{- end }}
        join_members:
          - {{ include "loki.memberlist" . }}
          {{- with .Values.migrate.fromDistributed }}
          {{- if .enabled }}
          - {{ .memberlistService }}
          {{- end }}
          {{- end }}
      {{- end }}

      {{- with .Values.loki.ingester }}
      ingester:
        {{- tpl (. | toYaml) $ | nindent 4 }}
      {{- end }}

      {{- if .Values.loki.commonConfig}}
      common:
      {{- toYaml .Values.loki.commonConfig | nindent 2}}
        storage:
        {{- include "loki.commonStorageConfig" . | nindent 4}}
      {{- end}}

      {{- with .Values.loki.limits_config }}
      limits_config:
        {{- tpl (. | toYaml) $ | nindent 4 }}
      {{- end }}

      runtime_config:
        file: /etc/loki/runtime-config/runtime-config.yaml

      {{- with .Values.chunksCache }}
      {{- if .enabled }}
      chunk_store_config:
        chunk_cache_config:
          default_validity: {{ .defaultValidity }}
          background:
            writeback_goroutines: {{ .writebackParallelism }}
            writeback_buffer: {{ .writebackBuffer }}
            writeback_size_limit: {{ .writebackSizeLimit }}
          memcached:
            batch_size: {{ .batchSize }}
            parallelism: {{ .parallelism }}
          memcached_client:
            addresses: dnssrvnoa+_memcached-client._tcp.{{ template "loki.fullname" $ }}-chunks-cache.{{ $.Release.Namespace }}.svc
            consistent_hash: true
            timeout: {{ .timeout }}
            max_idle_conns: 72
      {{- end }}
      {{- end }}

      {{- if .Values.loki.schemaConfig }}
      schema_config:
      {{- toYaml .Values.loki.schemaConfig | nindent 2}}
      {{- end }}

      {{- if .Values.loki.useTestSchema }}
      schema_config:
      {{- toYaml .Values.loki.testSchemaConfig | nindent 2}}
      {{- end }}

      {{- if .Values.ruler.enabled }}
      {{ include "loki.rulerConfig" . }}
      {{- end }}

      {{- if and .Values.loki.storage.use_thanos_objstore .Values.ruler.enabled}}
      ruler_storage:
        {{- include "loki.rulerThanosStorageConfig" . | nindent 2 }}
      {{- end }}

      {{- if or .Values.tableManager.retention_deletes_enabled .Values.tableManager.retention_period }}
      table_manager:
        retention_deletes_enabled: {{ .Values.tableManager.retention_deletes_enabled }}
        retention_period: {{ .Values.tableManager.retention_period }}
      {{- end }}

      query_range:
        align_queries_with_step: true
        {{- with .Values.loki.query_range }}
        {{- tpl (. | toYaml) $ | nindent 2 }}
        {{- end }}
        {{- if .Values.resultsCache.enabled }}
        {{- with .Values.resultsCache }}
        cache_results: true
        results_cache:
          cache:
            default_validity: {{ .defaultValidity }}
            background:
              writeback_goroutines: {{ .writebackParallelism }}
              writeback_buffer: {{ .writebackBuffer }}
              writeback_size_limit: {{ .writebackSizeLimit }}
            memcached_client:
              consistent_hash: true
              addresses: dnssrvnoa+_memcached-client._tcp.{{ template "loki.fullname" $ }}-results-cache.{{ $.Release.Namespace }}.svc
              timeout: {{ .timeout }}
              update_interval: 1m
        {{- end }}
        {{- end }}

      {{- with .Values.loki.storage_config }}
      storage_config:
        {{- tpl (. | toYaml) $ | nindent 4 }}
      {{- end }}

      {{- with .Values.loki.query_scheduler }}
      query_scheduler:
        {{- tpl (. | toYaml) $ | nindent 4 }}
      {{- end }}

      {{- with .Values.loki.compactor }}
      compactor:
        {{- tpl (. | toYaml) $ | nindent 4 }}
      {{- end }}

      {{- with .Values.loki.analytics }}
      analytics:
        {{- tpl (. | toYaml) $ | nindent 4 }}
      {{- end }}

      {{- if .Values.loki.ui.enabled }}
      ui:
        discovery:
          join_peers:
            - '{{ include "loki.queryFrontendFullname" . }}.{{ $.Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}'
      {{- end }}
      {{- with .Values.loki.querier }}
      querier:
        {{- tpl (. | toYaml) $ | nindent 4 }}
      {{- end }}

      {{- with .Values.loki.index_gateway }}
      index_gateway:
        {{- tpl (. | toYaml) $ | nindent 4 }}
      {{- end }}

      {{- with .Values.loki.frontend }}
      frontend:
        {{- tpl (. | toYaml) $ | nindent 4 }}
      {{- end }}

      {{- with .Values.loki.frontend_worker }}
      frontend_worker:
        {{- tpl (. | toYaml) $ | nindent 4 }}
      {{- end }}

      {{- with .Values.loki.distributor }}
      distributor:
        {{- tpl (. | toYaml) $ | nindent 4 }}
      {{- end }}

      tracing:
        enabled: {{ .Values.loki.tracing.enabled }}

      {{- with .Values.loki.bloom_build }}
      bloom_build:
        {{- tpl (. | toYaml) $ | nindent 4 }}
      {{- end }}

      {{- with .Values.loki.bloom_gateway }}
      bloom_gateway:
        {{- tpl (. | toYaml) $ | nindent 4 }}
      {{- end }}
    # Should authentication be enabled
    auth_enabled: false
    memberlistConfig: {}
    # -- Extra memberlist configuration
    extraMemberlistConfig: {}
    server:
      http_listen_port: 3100
      grpc_listen_port: 9095
      http_server_read_timeout: 600s
      http_server_write_timeout: 600s
    # -- Limits config
    limits_config:
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      max_cache_freshness_per_query: 10m
      split_queries_by_interval: 15m
      query_timeout: 300s
      volume_enabled: true
    runtimeConfig: {}
    commonConfig:
      replication_factor: 1
    storage:
      type: filesystem
      filesystem:
        chunks_directory: /var/loki/chunks
        rules_directory: /var/loki/rules
        admin_api_directory: /var/loki/admin
    schemaConfig:
      configs:
        - from: "2024-04-01"
          store: tsdb
          object_store: filesystem
          schema: v13
          index:
            prefix: loki_index_
            period: 24h
  test:
    enabled: true
    # -- Used to directly query the metrics endpoint of the canary for testing, this approach avoids needing prometheus for testing.
    # This in a newer approach to using prometheusAddress such that tests do not have a dependency on prometheus
    canaryServiceAddress: "http://loki-canary:3500/metrics"
    # -- Address of the prometheus server to query for the test. This overrides any value set for canaryServiceAddress.
    # This is kept for backward compatibility and may be removed in future releases. Previous value was 'http://prometheus:9090'
    prometheusAddress: ""

  lokiCanary:
    enabled: true
    push: true
    labelname: pod
    tolerations:
     - operator: "Exists"


  networkPolicy:
    enabled: false
    flavor: kubernetes
    metrics:
      podSelector: {}
      # -- Specifies the namespaces which are allowed to access the metrics port
      namespaceSelector: {}
      # -- Specifies specific network CIDRs which are allowed to access the metrics port.
      # In case you use namespaceSelector, you also have to specify your kubelet networks here.
      # The metrics ports are also used for probes.
      cidrs: []
    ingress:
      # -- Specifies the Pods which are allowed to access the http port.
      # As this is cross-namespace communication, you also need the namespaceSelector.
      podSelector: {}
      # -- Specifies the namespaces which are allowed to access the http port
      namespaceSelector: {}
    alertmanager:
      # -- Specify the alertmanager port used for alerting
      port: 9093
      # -- Specifies the alertmanager Pods.
      # As this is cross-namespace communication, you also need the namespaceSelector.
      podSelector: {}
      # -- Specifies the namespace the alertmanager is running in
      namespaceSelector: {}
    externalStorage:
      # -- Specify the port used for external storage, e.g. AWS S3
      ports: []
      # -- Specifies specific network CIDRs you want to limit access to
      cidrs: []
    discovery:
      # -- (int) Specify the port used for discovery
      port: null
      # -- Specifies the Pods labels used for discovery.
      # As this is cross-namespace communication, you also need the namespaceSelector.
      podSelector: {}
      # -- Specifies the namespace the discovery Pods are running in
      namespaceSelector: {}
    egressWorld:
      # -- Enable additional cilium egress rules to external world for write, read and backend.
      enabled: false
    egressKubeApiserver:
      # -- Enable additional cilium egress rules to kube-apiserver for backend.
      enabled: false

  write:
    replicas: 0

  read:
    replicas: 0
  backend:
    replicas: 0