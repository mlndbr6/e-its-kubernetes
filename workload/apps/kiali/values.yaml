kiali-server:
  kiali_route_url: ""

  additional_display_details:
  - annotation: kiali.io/api-spec
    icon_annotation: kiali.io/api-type
    title: API Documentation

  istio_namespace: "" # default is where Kiali is installed

  auth:
    openid: {}
    openshift: {}
    strategy: ""

  clustering:
    autodetect_secrets:
      enabled: true
      label: "kiali.io/multiCluster=true"
    clusters: []

  deployment:
    additional_service_yaml: {}
    affinity:
      node:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: "kubernetes.io/hostname"
              operator: In
              values:
              - capi-ha-monitoring000000
              - capi-ha-monitoring000001
    # The Kiali server helm chart only supports cluster-wide access; setting cluster_wide_access to false is not supported.
    # For more control over what the Kial Service Account can see, use the Kiali Operator.
    cluster_wide_access: true
    configmap_annotations: {}
    custom_envs: []
    custom_secrets: []
    instance_name: "kiali"
    logger:
      log_format: "text"
      log_level: "info"
      time_field_format: "2006-01-02T15:04:05Z07:00"
      sampler_rate: "1"
    node_selector: {}
    pod_annotations:
      proxy.istio.io/config: '{ "holdApplicationUntilProxyStarts": true }'
    pod_labels: {}
    priority_class_name: ""
    probes:
      liveness:
        initial_delay_seconds: 5
        period_seconds: 30
      readiness:
        initial_delay_seconds: 5
        period_seconds: 30
      startup:
        failure_threshold: 6
        initial_delay_seconds: 30
        period_seconds: 10
    remote_cluster_resources_only: false
    # if deployment.hpa is defined, this replicas setting will be ignored
    replicas: 1
    resources:
      requests:
        cpu: "10m"
        memory: "64Mi"
      limits:
        memory: "1Gi"
    secret_name: "kiali"
    security_context: {}
    service_annotations: {}
    service_type: "ClusterIP"
    tolerations:
      - key: "monitoring"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
    topology_spread_constraints: []
    version_label: v2.9.0 # v1.39 # v1.39.0 # see: https://quay.io/repository/kiali/kiali?tab=tags
    view_only_mode: false

  external_services:
    custom_dashboards:
      enabled: true
    prometheus:
      url: 'http://kube-prometheus-stack-prometheus.kube-prometheus-stack:9090/'
    grafana:
      internal_url: "http://grafana.grafana.svc.cluster.local:80"
      external_url: "https://grafana.lndbrg.tech"
    istio:
      root_namespace: "istio-system"

  identity: {}
    #cert_file:
    #private_key_file:

  kiali_feature_flags:
    disabled_features: []
    validations:
      ignore: ["KIA1301"]

  login_token:
    signing_key: ""

  server:
    port: 20001

    observability:
      metrics:
        enabled: true
        port: 9090
    web_root: ""
    web_fqdn: "kiali.lndbrg.tech"
